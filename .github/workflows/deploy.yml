name: CI/CD - Restart and Deploy Honeypot on Azure VM

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  restart-vm:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Restart Azure VM
        run: |
          az vm restart --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_VM_NAME }}
      
      - name: Set Tag Name
        id: set-tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "TAG_NAME=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
            echo "::set-output name=tag_name::${{ github.event.inputs.tag }}"
          else
            echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
            echo "::set-output name=tag_name::${TAG_NAME}"
          fi
    outputs:
      tag_name: ${{ steps.set-tag.outputs.tag_name }}
  
  deploy-honeypot:
    runs-on: ubuntu-latest
    needs: restart-vm
    env:
      TAG_NAME: ${{ needs.restart-vm.outputs.tag_name }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Transfer Files to Azure VM via SCP
        run: |
          # Create a temporary private key file for the SCP command
          echo "${{ secrets.AZURE_VM_SSH_PRIVATE_KEY }}" > /tmp/private_key.pem
          chmod 600 /tmp/private_key.pem

          # Use SCP to copy files
          scp -o StrictHostKeyChecking=no -i /tmp/private_key.pem -r ${{ github.workspace }}/* azureuser@${{ secrets.AZURE_VM_IP }}:/home/azureuser/thesis_honeypot/${{ env.TAG_NAME }}

          # Clean up the private key file
          rm /tmp/private_key.pem
  
      - name: Deploy Application
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_PRIVATE_KEY }}
          script: |
            cd /home/azureuser/thesis_honeypot/${{ env.TAG_NAME }}/docker
            sudo docker compose up -d --build
      
  check-web-app:
    runs-on: ubuntu-latest
    needs: deploy-honeypot
    steps:
      - name: Check if Web Application is Running
        run: |
          sleep 10

          if curl -s --head http://smartgadgetstore.live | grep "200 OK" > /dev/null; then
            echo "Web application is up and running."
          else
            echo "Web application is not running."
            exit 1