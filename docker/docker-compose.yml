networks:
  tanner_local:

services:

# Tanner Redis Service
  tanner_redis:
    build: ./redis
    container_name: tanner_redis
    restart: on-failure
    stop_signal: SIGKILL
    tty: true
#    cpu_count: 1
#    cpus: 0.25
    networks:
     - tanner_local
    image: "dtagdevsec/redis:24.04"
    read_only: true

# PHP Sandbox service
  tanner_phpox:
    build: ./phpox
    container_name: tanner_phpox
    restart: on-failure
    stop_signal: SIGKILL
    tmpfs:
     - /tmp:uid=2000,gid=2000
    tty: true
#    cpu_count: 1
#    cpus: 0.25
    networks:
     - tanner_local
    image: "dtagdevsec/phpox:24.04"
    read_only: true

# Tanner API Service
#  tanner_api:
#    build:
#      context: ../
#      dockerfile: docker/tanner/Dockerfile
#    container_name: tanner_api
#    restart: on-failure
#    stop_signal: SIGKILL
#    tmpfs:
#     - /tmp/tanner:uid=2000,gid=2000
#    tty: true
##    cpu_count: 1
##    cpus: 0.25
#    networks:
#     - tanner_local
#    image: "dtagdevsec/tanner:24.04"
#    read_only: true
#    volumes:
#     - $HOME/tpotce/data/tanner/log:/var/log/tanner
#    command: tannerapi 
#    depends_on:
#     - tanner_redis
#    ports:
#     - "8092:8092"
#
## Tanner WEB Service
#  tanner_web:
#    build:
#      context: ../
#      dockerfile: docker/tanner/Dockerfile
#    container_name: tanner_web
#    restart: on-failure
#    stop_signal: SIGKILL
#    tmpfs:
#     - /tmp/tanner:uid=2000,gid=2000
#    tty: true
#    networks:
#     - tanner_local
#    ports:
#     - "127.0.0.1:8091:8091"
#    image: "dtagdevsec/tanner:24.04"
#    command: tannerweb
#    read_only: true
#    volumes:
#     - $HOME/tpotce/data/tanner/log:/var/log/tanner
#    depends_on:
#     - tanner_redis

# Tanner Service
  tanner:
    build: 
      context: ../
      dockerfile: docker/tanner/Dockerfile
    container_name: tanner
    restart: "no"
    stop_signal: SIGKILL
    tty: true
#    cpu_count: 1
#    cpus: 0.25
    networks:
     - tanner_local
    image: "dtagdevsec/tanner:24.04"
    command: tanner
    volumes:
     - /tmp/tanner:/tmp/tanner
     - $HOME/web-honeypot/data/tanner/log:/tmp/tanner
     - $HOME/web-honeypot/data/tanner/data:/var/log/tanner
     - $HOME/web-honeypot/data/tanner/files:/opt/tanner/files
    depends_on:
   #  - tanner_api
   #  - tanner_web
     - tanner_phpox

# Snare Service
  snare:
    build: 
      context: ../
      dockerfile: docker/snare/Dockerfile
    container_name: snare
    restart: "no"
    stop_signal: SIGKILL
    tty: true
#    cpu_count: 1
#    cpus: 0.25
    networks:
     - tanner_local
    ports:
     - "80:80"
    image: "dtagdevsec/snare:24.04"
    depends_on:
     - tanner
    volumes:
     - $HOME/tpotce/data/snare/log:/var/log/snare
     - $HOME/credentials.xlsx:/opt/snare/files/credentials.xlsx
     - ./snare/dist/honeytokens:/opt/snare/honeytokens
